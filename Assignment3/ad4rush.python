MOD = 10**9 + 7

def count_subsequences(arr, target):
    n = len(arr)
    dp = [[0] * 1024 for _ in range(n + 1)]
    dp[0][0] = 1

    for i in range(1, n + 1):
        for j in range(1024):
            dp[i][j] = (dp[i - 1][j] + dp[i - 1][j ^ arr[i - 1]]) % MOD

    return dp[n][target]

def main():
    Q = int(input())
    queries = []
    for _ in range(Q):
        M, x = map(int, input().split())
        queries.append((M, x))

    arr = []
    special_keys = []
    for M, x in queries:
        if M == 1:
            arr.append(x)
        else:
            special_key = count_subsequences(arr, x)
            special_keys.append(special_key)

    for key in special_keys:
        print(key)

if __name__ == "__main__":
    main()
